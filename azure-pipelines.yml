trigger:
  branches:
    include:
      - master  

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'parkpulse-azure-subscription'
  azureContainerRegistry: 'parkpulsedocker'
  dockerComposeFile: 'docker-compose.yml'
  imageTag: 'v1.0.0'
  DOCKER_USERNAME: $(DOCKER_USERNAME)
  DOCKER_PASSWORD: $(DOCKER_PASSWORD)

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - checkout: self

          - task: DownloadSecureFile@1
            name: sshPrivateKey
            displayName: 'Download SSH private key'
            inputs:
              secureFile: 'id_rsa'

          - script: |
              echo Installing SSH key $(sshPrivateKey.secureFilePath)...
              sudo chown root:root $(sshPrivateKey.secureFilePath)
              mkdir -p ~/.ssh
              mv $(sshPrivateKey.secureFilePath) ~/.ssh/id_rsa
              sudo chmod 600 ~/.ssh/id_rsa
              eval "$(ssh-agent -s)"
              ssh-add ~/.ssh/id_rsa
              git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -F /dev/null"
            displayName: 'Setting Github SSH Key'

          - script: |
              chmod +x ./init_project.sh 
              ./init_project.sh
            displayName: 'Initialize Project'

          - script: |
              set -x 
              docker compose -f $(dockerComposeFile) build
            displayName: 'Build Docker Images'

          - script: |
              echo $(DOCKER_PASSWORD) | docker login $(azureContainerRegistry).azurecr.io -u $(DOCKER_USERNAME) --password-stdin
            displayName: 'Login to Azure Container Registry'

          - script: |
              docker compose -f $(dockerComposeFile) push
            displayName: 'Push Docker Images'

  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: Deploy
        steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appName: 'server-container'
              images: |
                $(azureContainerRegistry).azurecr.io/parkpulse-accessmanager:$(imageTag)
                $(azureContainerRegistry).azurecr.io/parkpulse-api:$(imageTag)
                $(azureContainerRegistry).azurecr.io/parkpulse-web:$(imageTag)
                $(azureContainerRegistry).azurecr.io/nginx:$(imageTag)