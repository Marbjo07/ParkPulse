trigger:
  branches:
    include:
      - master  

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'parkpulse-azure-subscription'
  azureContainerRegistry: 'parkpulsedocker'
  dockerComposeFile: 'docker-compose.prod.yml'
  dockerComposeFileDeploy: 'docker-compose.deploy.yml'
  kubernetesServiceConnection: 'aks-dev-cluster-connection'
  kubernetesServiceEndpoint: 'parkpulse-aks-connection'
  imageTag: 'v1.0.0'
  appName: 'ParkPulse-Web'

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - checkout: self
            persistCredentials: true

          - script: |
              git config --global url."https://$(GITHUB_PAT)@github.com/".insteadOf "https://github.com/"
              git submodule update --init --recursive
            displayName: 'Initialize submodules'

          - task: DownloadSecureFile@1
            displayName: 'Download secure files'
            inputs:
              secureFile: .api.env

          - task: DownloadSecureFile@1
            displayName: 'Download secure files'
            inputs:
              secureFile: .accessmanager.prod.env

          - task: CopyFiles@2
            displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)'
            inputs:
              SourceFolder: '$(Agent.TempDirectory)'
              Contents: .api.env
              TargetFolder: '$(System.DefaultWorkingDirectory)'

          - task: CopyFiles@2
            displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)'
            inputs:
              SourceFolder: '$(Agent.TempDirectory)'
              Contents: .accessmanager.prod.env
              TargetFolder: '$(System.DefaultWorkingDirectory)'


          - script: |
              set -x 
              mkdir parkpulse-api/downloads
              docker compose -f $(dockerComposeFile) build
            displayName: 'Build Docker Images'

          - script: |
              echo $(DOCKER_PASSWORD) | docker login $(azureContainerRegistry).azurecr.io -u $(DOCKER_USERNAME) --password-stdin
            displayName: 'Login to Azure Container Registry'

          - script: |
              docker compose -f $(dockerComposeFile) push
            displayName: 'Push Docker Images'

  - stage: Deploy
    dependsOn: Build
    jobs:
      - deployment: DeployToAKS
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'aks-dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: Kubernetes@1
                  inputs:
                    kubernetesServiceConnection: $(kubernetesServiceConnection)
                    kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
                    command: 'installKubectl'
                    versionSpec: 'v1.26.0'

                - script: |
                    curl -L https://github.com/kubernetes/kompose/releases/download/v1.26.0/kompose-linux-amd64 -o kompose
                    chmod +x kompose
                    sudo mv ./kompose /usr/local/bin/kompose
                    kompose convert -f docker-compose.yml
                  displayName: 'Convert Docker Compose to Kubernetes YAML'

                - task: Kubernetes@1
                  inputs:
                    kubernetesServiceConnection: $(kubernetesServiceConnection)
                    kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
                    command: 'apply'
                    useConfigurationFile: true
                    configuration: |
                      deployment.yaml
                      service.yaml
                  displayName: 'Deploy to AKS'