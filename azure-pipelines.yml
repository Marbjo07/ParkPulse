trigger:
  branches:
    include:
      - master  

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'parkpulse-azure-subscription'
  azureContainerRegistry: 'parkpulsedocker'
  dockerComposeFile: 'docker-compose.yml'
  imageTag: 'v1.0.0'
  DOCKER_USERNAME: $(DOCKER_USERNAME)  # Ensure these variables are defined in pipeline settings or variable groups
  DOCKER_PASSWORD: $(DOCKER_PASSWORD)

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - checkout: self

          - script: |
              ./init_project.sh 
            displayName: 'Initialize Project'


          - script: |
              printenv  # For Unix-based systems (Linux/macOS)
            displayName: 'Print Environment Variables'

          - script: |
              set -x 
              docker compose -f $(dockerComposeFile) build
            displayName: 'Build Docker Images'

          - script: |
              echo $(DOCKER_PASSWORD) | docker login $(azureContainerRegistry).azurecr.io -u $(DOCKER_USERNAME) --password-stdin
            displayName: 'Login to Azure Container Registry'

          - script: |
              docker compose -f $(dockerComposeFile) push
            displayName: 'Push Docker Images'

  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: Deploy
        steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appName: 'server-container'
              images: |
                $(azureContainerRegistry).azurecr.io/parkpulse-accessmanager:$(imageTag)
                $(azureContainerRegistry).azurecr.io/parkpulse-api:$(imageTag)
                $(azureContainerRegistry).azurecr.io/parkpulse-web:$(imageTag)
                $(azureContainerRegistry).azurecr.io/nginx:$(imageTag)